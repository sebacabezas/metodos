pred2 = predict(reg, newdata = as.data.frame("x1" = datos$Xval))
ECM1 = c(ECM1, mean((pred1 - datos$y[1:i])^2))
ECM2 = c(ECM2, mean((pred2 - datos$yval)^2))
}
plot(seq(1,12),  ECM1, xlim = c(-0,16), ylim = c(0,300))
lines(ECM2)
# Podemos ver que convergen al mismo valor
lm(datos$y[c(1,2)] ~ poly(datos$X, degree = 8, raw = TRUE, simple = TRUE)[1:2,])
y1 = datos$y[1:i-1]
reg = lm(y1~x1)
x1 =  poly(datos$X, degree = 8, raw = TRUE, simple = TRUE)[1:i,1:i]
y1 = datos$y[1:i-1]
reg = lm(y1~x1)
i = 3
x1 =  poly(datos$X, degree = 8, raw = TRUE, simple = TRUE)[1:i,1:i]
y1 = datos$y[1:i-1]
reg = lm(y1~x1)
y1
x1
y1 = datos$y[1:i]
reg = lm(y1~x1)
reg
pred1 = Predict.matrix(reg, base_poly[1:i,1:i-1])
reg = lm(y1~x1)
pred1 = Predict.matrix(reg, base_poly[1:i,1:i-1])
pred1 = Predict(reg, base_poly[1:i,1:i-1])
pred1 = predict(reg, base_poly[1:i,1:i-1])
pred1
pred2 = predict(reg, base_poly)
pred2
base_poly_2 = as.data.frame(poly(datos$Xval, degree = 8, raw = TRUE, simple = TRUE))
pred2 = predict(reg, base_poly2)
base_poly_2 = as.data.frame(poly(datos$Xval, degree = 8, raw = TRUE, simple = TRUE))
pred2 = predict(reg, base_poly_2)
pred2
pred1 = predict(reg, base_poly[1:i,1:i-1])
pred1
reg
x1 =  poly(datos$X, degree = 8, raw = TRUE, simple = TRUE)[1:i-1,1:i]
y1 = datos$y[1:i]
reg = lm(y1~x1)
x1 =  poly(datos$X, degree = 8, raw = TRUE, simple = TRUE)[1:i,1:i-1]
y1 = datos$y[1:i]
reg = lm(y1~x1)
reg
pred1 = predict(reg, base_poly[1:i,1:i-1])
pred2 = predict(reg, base_poly_2)
pred1
reg
base_poly[1:i,1:i-1]
pred1 = predict(reg, base_poly[1:i+1,1:i-1])
pred1
pred1 = predict(reg, base_poly[1:i+1,1:i-1])
base_poly[1:i+1,1:i-1])
base_poly[1:i+1,1:i-1]
pred1 = predict(reg, base_poly[1:i+2,1:i-1])
base_poly[1:i+2,1:i-1]
pred1 = predict(reg, base_poly[1:(i+2),1:i-1])
pred1
pred1 = predict(reg, base_poly[1:(i+2),1:(i-1)])
reg
pred1 = predict(reg, base_poly[1:(i),1:(i-1)])
pred1
colnames(base_poly2) = c("x11","x12","x13","x14","x15","x16","x17","x18")
base_poly_2 = as.data.frame(poly(datos$Xval, degree = 8, raw = TRUE, simple = TRUE))
colnames(base_poly2) = c("x11","x12","x13","x14","x15","x16","x17","x18")
colnames(base_poly_2) = c("x11","x12","x13","x14","x15","x16","x17","x18")
pred2 = predict(reg, base_poly_2)
x1
as.data.frame(1x,y1)
as.data.frame(x1,y1)
x1
base_poly = as.data.frame(datos$y, poly(datos$X, degree = 8, raw = TRUE, simple = TRUE))
colnames(base_poly) = c("y", "x11","x12","x13","x14","x15","x16","x17","x18")
base_poly
base_poly = as.data.frame(datos$y, poly(datos$X, degree = 8, raw = TRUE, simple = TRUE))
base_poly
base_poly = as.data.frame(c(datos$y, poly(datos$X, degree = 8, raw = TRUE, simple = TRUE)))
base_poly
base_poly = as.data.frame(poly(datos$X, degree = 8, raw = TRUE, simple = TRUE))
base_poly
base_poly = cbind(datos$y, base_poly)
base_poly
colnames(base_poly) = c("y","x11","x12","x13","x14","x15","x16","x17","x18")
base_poly
base_poly[1,]
data_temp = base_poly[1:i,]
reg = lm(y~., data = data_temp)
reg
pred1 = predict(reg, base_poly[1:(i),1:(i-1)])
base_poly[1:(i),1:(i-1)]
pred1 = predict(reg, base_poly[1:(i),1:(i)])
pred1 = predict(reg, base_poly[1:(i),])
pred1
pred2 = predict(reg, base_poly_2)
pred2
data_temp = base_poly[1:i,]
reg = lm(y~., data = data_temp)
pred1 = predict(reg, base_poly[1:(i),])
pred2 = predict(reg, base_poly_2)
data_temp = base_poly[1:i,]
reg = lm(y~., data = data_temp)
pred1 = predict(reg, base_poly[1:(i),])
pred1
data_temp
base_poly_2
reg
pred2
7-16+280*0.499 + 0.00834*4.69e+03
7-16+280*0.499 + 0.00834*(4.69e+03)
7-16+280*0.499 + 8.34*4.69
7 - 0.449*16.7 + 0.0083*280
ECM1 = c(ECM1, mean((pred1 - datos$y[1:i])^2))
ECM2 = c(ECM2, mean((pred2 - datos$yval)^2))
ECM1
ECM1 = c(0)
ECM2 = c(mean((rep(datos$y[1],length(datos$yval)) - datos$yval)^2))
rm(i)
ECM2
for (i in 2:8) {
data_temp = base_poly[1:i,]
reg = lm(y~., data = data_temp)
pred1 = predict(reg, base_poly[1:(i),])
pred2 = predict(reg, base_poly_2)
ECM1 = c(ECM1, mean((pred1 - datos$y[1:i])^2))
ECM2 = c(ECM2, mean((pred2 - datos$yval)^2))
}
ECM1
ECM2
ECM1 = c(0)
ECM2 = c(mean((rep(datos$y[1],length(datos$yval)) - datos$yval)^2))
for (i in 2:8) {
data_temp = base_poly[1:i,]
reg = lm(y~., data = data_temp)
pred1 = predict(reg, base_poly[1:(i),])
pred2 = predict(reg, base_poly_2)
ECM1 = c(ECM1, mean((pred1 - datos$y[1:i])^2))
ECM2 = c(ECM2, mean((pred2 - datos$yval)^2))
}
ECM2
i = 9
data_temp = base_poly[1:i,]
data_temp
reg = lm(y~., data = data_temp)
reg
pred1 = predict(reg, base_poly[1:(i),])
pred2 = predict(reg, base_poly_2)
pred1
pred2
plot(seq(1,12),  ECM1, xlim = c(-0,16), ylim = c(0,300))
ECM1
rm(i)
ECM1 = c(0)
ECM2 = c(mean((rep(datos$y[1],length(datos$yval)) - datos$yval)^2))
for (i in 2:length(datos$X)) {
data_temp = base_poly[1:i,]
reg = lm(y~., data = data_temp)
pred1 = predict(reg, base_poly[1:(i),])
pred2 = predict(reg, base_poly_2)
ECM1 = c(ECM1, mean((pred1 - datos$y[1:i])^2))
ECM2 = c(ECM2, mean((pred2 - datos$yval)^2))
}
plot(seq(1,12),  ECM1, xlim = c(-0,16), ylim = c(0,300))
lines(ECM2)
plot(seq(1,12),  ECM1, xlim = c(0,12), ylim = c(0,250))
lines(ECM2)
ECM2
mean((pred2 - datos$yval)^2)
i = 10
data_temp = base_poly[1:i,]
reg = lm(y~., data = data_temp)
pred1 = predict(reg, base_poly[1:(i),])
pred2 = predict(reg, base_poly_2)
ECM1 = c(ECM1, mean((pred1 - datos$y[1:i])^2))
ECM2 = c(ECM2, mean((pred2 - datos$yval)^2))
mean((pred2 - datos$yval)^2)
pred2
datos$yval
data_temp
datos$yval
reg
base_poly
modelo_contraida <- lm.ridge( y~ ., data=base_poly, lambda = 4.9)
library(car)
library(MASS)
modelo_contraida <- lm.ridge( y~ ., data=base_poly, lambda = 4.9)
modelo_contraida
modelo_contraida <- lm.ridge( y~ ., data=base_poly, lambda = 10)
modelo_contraida
modelo_contraida <- lm.ridge( y~ ., data=base_poly, lambda = 10/28)
modelo_contraida
modelo_ridge <- lm.ridge( y~ ., data=base_poly, lambda = 10/28)
plot(datos$y, datos$X
plot(datos$y, datos$X)
plot(datos$y, datos$X)
plot(datos$X, datos$y)
plot(datos$X,datos$y)
modelo_ridge <- lm.ridge( y~ ., data=base_poly, lambda = 10/28)
plot(datos$X, datos$y)
lines(grilla, modelo_ridge$coefficients[[1]] + modelo_ridge$coefficients[[2]]*grilla + modelo_ridge$coefficients[[3]]*grilla^2 +
modelo_ridge$coefficients[[4]]*grilla^3 + modelo_ridge$coefficients[[5]]*grilla^4 +
modelo_ridge$coefficients[[6]]*grilla^5 + modelo_ridge$coefficients[[7]]*grilla^6 +
modelo_ridge$coefficients[[8]]*grilla^7 + modelo_ridge$coefficients[[9]]*grilla^8, col = "green")
grilla
modelo_ridge$coefficients[[5]]*grilla^4
modelo_ridge
lines(grilla, modelo_ridge[[1]] + modelo_ridge[[2]]*grilla + modelo_ridge[[3]]*grilla^2 +
modelo_ridge[[4]]*grilla^3 + modelo_ridge[[5]]*grilla^4 +
modelo_ridge[[6]]*grilla^5 + modelo_ridge[[7]]*grilla^6 +
modelo_ridge[[8]]*grilla^7 + modelo_ridge[[9]]*grilla^8, col = "green")
modelo_ridge[[4]]
modelo_ridge[[1]] + modelo_ridge[[2]]*grilla + modelo_ridge[[3]]*grilla^2 +
modelo_ridge[[4]]*grilla^3 + modelo_ridge[[5]]*grilla^4 +
modelo_ridge[[6]]*grilla^5 + modelo_ridge[[7]]*grilla^6 +
modelo_ridge[[8]]*grilla^7 + modelo_ridge[[9]]*grilla^8
grilla = seq(-50,50,length=1000)
plot(datos$X, datos$y)
lines(grilla, modelo_ridge[[1]] + modelo_ridge[[2]]*grilla + modelo_ridge[[3]]*grilla^2 +
modelo_ridge[[4]]*grilla^3 + modelo_ridge[[5]]*grilla^4 +
modelo_ridge[[6]]*grilla^5 + modelo_ridge[[7]]*grilla^6 +
modelo_ridge[[8]]*grilla^7 + modelo_ridge[[9]]*grilla^8, col = "green")
grilla = seq(-50,50,length=100)
plot(datos$X, datos$y)
lines(grilla, modelo_ridge[[1]] + modelo_ridge[[2]]*grilla + modelo_ridge[[3]]*grilla^2 +
modelo_ridge[[4]]*grilla^3 + modelo_ridge[[5]]*grilla^4 +
modelo_ridge[[6]]*grilla^5 + modelo_ridge[[7]]*grilla^6 +
modelo_ridge[[8]]*grilla^7 + modelo_ridge[[9]]*grilla^8, col = "green")
grilla = seq(-50,50,length=10)
plot(datos$X, datos$y)
lines(grilla, modelo_ridge[[1]] + modelo_ridge[[2]]*grilla + modelo_ridge[[3]]*grilla^2 +
modelo_ridge[[4]]*grilla^3 + modelo_ridge[[5]]*grilla^4 +
modelo_ridge[[6]]*grilla^5 + modelo_ridge[[7]]*grilla^6 +
modelo_ridge[[8]]*grilla^7 + modelo_ridge[[9]]*grilla^8, col = "green")
lines(datos$X, modelo_ridge[[1]] + modelo_ridge[[2]]*grilla + modelo_ridge[[3]]*grilla^2 +
modelo_ridge[[4]]*grilla^3 + modelo_ridge[[5]]*grilla^4 +
modelo_ridge[[6]]*grilla^5 + modelo_ridge[[7]]*grilla^6 +
modelo_ridge[[8]]*grilla^7 + modelo_ridge[[9]]*grilla^8, col = "green")
lines(datos$X, modelo_ridge[[1]] + modelo_ridge[[2]]*grilla + modelo_ridge[[3]]*grilla^2 +
modelo_ridge[[4]]*grilla^3 + modelo_ridge[[5]]*grilla^4 +
modelo_ridge[[6]]*grilla^5 + modelo_ridge[[7]]*grilla^6 +
modelo_ridge[[8]]*grilla^7 + modelo_ridge[[9]]*grilla^8, col = "green")
plot(datos$X, datos$y)
lines(datos$X, modelo_ridge[[1]] + modelo_ridge[[2]]*datos$X + modelo_ridge[[3]]*datos$X^2 +
modelo_ridge[[4]]*datos$X^3 + modelo_ridge[[5]]*datos$X^4 +
modelo_ridge[[6]]*datos$X^5 + modelo_ridge[[7]]*datos$X^6 +
modelo_ridge[[8]]*datos$X^7 + modelo_ridge[[9]]*datos$X^8, col = "green")
modelo_ridge[[2]]
modelo_ridge
modelo_ridge[1]
modelo_ridge[2]
modelo_ridge[1]
modelo_ridge[1][1]
modelo_ridge[1][[1]]
modelo_ridge$coef[1]
modelo_ridge$coef[[1]]
plot(datos$X, datos$y)
lines(datos$X, modelo_ridge$coef[[1]] + modelo_ridge$coef[[2]]*datos$X + modelo_ridge$coef[[3]]*datos$X^2 +
modelo_ridge$coef[[4]]*datos$X^3 + modelo_ridge$coef[[5]]*datos$X^4 +
modelo_ridge$coef[[6]]*datos$X^5 + modelo_ridge$coef[[7]]*datos$X^6 +
modelo_ridge$coef[[8]]*datos$X^7 + modelo_ridge$coef[[9]]*datos$X^8, col = "green")
modelo_ridge
modelo_ridge$Inter
modelo_ridge$coef
modelo_ridge[1]
modelo_ridge$lambda
modelo_ridge$scales
modelo_ridge$Inter
modelo_ridge$ym
modelo_ridge$GCV
modelo_ridge$kLW
modelo_ridge$kHKB
modelo_ridge
modelo_ridge*2
modelo_ridge$Inter
coef(modelo_ridge)
coef(modelo_ridge)[1]
lines(datos$X, coef(modelo_ridge)[[1]] + coef(modelo_ridge)[[2]]*datos$X + coef(modelo_ridge)[[3]]*datos$X^2 +
coef(modelo_ridge)[[4]]*datos$X^3 + coef(modelo_ridge)[[5]]*datos$X^4 +
coef(modelo_ridge)[[6]]*datos$X^5 + coef(modelo_ridge)[[7]]*datos$X^6 +
coef(modelo_ridge)[[8]]*datos$X^7 + coef(modelo_ridge)[[9]]*datos$X^8, col = "green")
grilla = seq(-50,50,length=1000)
plot(datos$X, datos$y)
lines(datos$X, coef(modelo_ridge)[[1]] + coef(modelo_ridge)[[2]]*grilla + coef(modelo_ridge)[[3]]*grilla^2 +
coef(modelo_ridge)[[4]]*grilla^3 + coef(modelo_ridge)[[5]]*grilla^4 +
coef(modelo_ridge)[[6]]*grilla^5 + coef(modelo_ridge)[[7]]*grilla^6 +
coef(modelo_ridge)[[8]]*grilla^7 + coef(modelo_ridge)[[9]]*grilla^8, col = "green")
lines(grilla, coef(modelo_ridge)[[1]] + coef(modelo_ridge)[[2]]*grilla + coef(modelo_ridge)[[3]]*grilla^2 +
coef(modelo_ridge)[[4]]*grilla^3 + coef(modelo_ridge)[[5]]*grilla^4 +
coef(modelo_ridge)[[6]]*grilla^5 + coef(modelo_ridge)[[7]]*grilla^6 +
coef(modelo_ridge)[[8]]*grilla^7 + coef(modelo_ridge)[[9]]*grilla^8, col = "green")
# Lambda = 100
modelo_ridge2 <- lm.ridge( y~ ., data=base_poly, lambda = 100/28)
grilla = seq(-50,50,length=1000)
plot(datos$X, datos$y)
lines(grilla, coef(modelo_ridge2)[[1]] + coef(modelo_ridge2)[[2]]*grilla + coef(modelo_ridge2)[[3]]*grilla^2 +
coef(modelo_ridge2)[[4]]*grilla^3 + coef(modelo_ridge2)[[5]]*grilla^4 +
coef(modelo_ridge2)[[6]]*grilla^5 + coef(modelo_ridge2)[[7]]*grilla^6 +
coef(modelo_ridge2)[[8]]*grilla^7 + coef(modelo_ridge2)[[9]]*grilla^8, col = "green")
# Lambda = 10
modelo_ridge <- lm.ridge( y~ ., data=base_poly, lambda = 10/28)
grilla = seq(-50,50,length=1000)
plot(datos$X, datos$y)
lines(grilla, coef(modelo_ridge)[[1]] + coef(modelo_ridge)[[2]]*grilla + coef(modelo_ridge)[[3]]*grilla^2 +
coef(modelo_ridge)[[4]]*grilla^3 + coef(modelo_ridge)[[5]]*grilla^4 +
coef(modelo_ridge)[[6]]*grilla^5 + coef(modelo_ridge)[[7]]*grilla^6 +
coef(modelo_ridge)[[8]]*grilla^7 + coef(modelo_ridge)[[9]]*grilla^8, col = "green")
# Lambda = 100
modelo_ridge2 <- lm.ridge( y~ ., data=base_poly, lambda = 100/28)
grilla = seq(-50,50,length=1000)
plot(datos$X, datos$y)
lines(grilla, coef(modelo_ridge2)[[1]] + coef(modelo_ridge2)[[2]]*grilla + coef(modelo_ridge2)[[3]]*grilla^2 +
coef(modelo_ridge2)[[4]]*grilla^3 + coef(modelo_ridge2)[[5]]*grilla^4 +
coef(modelo_ridge2)[[6]]*grilla^5 + coef(modelo_ridge2)[[7]]*grilla^6 +
coef(modelo_ridge2)[[8]]*grilla^7 + coef(modelo_ridge2)[[9]]*grilla^8, col = "green")
ml1 = lm(y~x, data = datos)
ml1 = lm(y~X, data = datos)
datos$X
datos$y
data_ml1 = data.frame("y" = datos$y, "x" = datos$X)
ml1 = lm(y~x, data = data_ml1)
ml1
data_testeo = data.frame("y" = datos$ytest, "x" = datos$Xtest)
predict(ml1, data_testeo)
predict(ml1, data_testeo$x)
data_ml1 = data.frame("y" = datos$y, "x1" = datos$X)
data_testeo = data.frame("y" = datos$ytest, "x1" = datos$Xtest)
ml1 = lm(y~x, data = data_ml1)
ml1 = lm(y~x1, data = data_ml1)
predict(ml1, data_testeo$x1)
x1 = data_testeo$x1
predict(ml1, data_testeo$x1)
predict(ml1, x1)
data_testeo
data_testeo[1,]
data_testeo[,1]
data_testeo[,2]
predict(ml1, data_testeo)
data_ml1 = data.frame("y" = datos$y, "x" = datos$X)
data_testeo = data.frame("y" = datos$ytest, "x" = datos$Xtest)
ml1 = lm(y~x, data = data_ml1)
predict(ml1, data_testeo)
data_testeo
ml1
predict(ml1, data_testeo)
ml2 = lm(y~., data = base_poly)
predict(ml2, data_testeo)
base_poly_test = poly(datos$Xtest, degree = 8, raw = TRUE, simple = TRUE)
ml2 = lm(y~., data = base_poly)
predict(ml2, base_poly_2)
predict(modelo_ridge, base_poly_test)
base_poly_test %*% coef(modelo_ridge)
base_poly_test
as.matrix(base_poly_test) %*% coef(modelo_ridge)
as.matrix(base_poly_test)
as.matrix(base_poly_test[1]) %*% coef(modelo_ridge)
as.matrix(base_poly_test[1])
base_poly_test[1]
base_poly_test[,]
as.matrix(base_poly_test[,])
as.matrix(base_poly_test[,]) %*% coef(modelo_ridge)
base_poly_test
as.matrix(rep(1,length(datos$Xtest), base_poly_test[,])
)
as.matrix(rep(1,length(datos$Xtest))
as.matrix(rep(1,length(datos$Xtest)))
as.matrix(rep(1,length(datos$Xtest)))
as.matrix(rep(1,length(datos$Xtest)), base_poly_test[,])
as.matrix(c(rep(1,length(datos$Xtest)), base_poly_test[,])) %*% coef(modelo_ridge)
cbind(rep(1,length(datos$X)),as.matrix(base_poly_test[,])) %*% coef(modelo_ridge)
cbind(rep(1,length(datos$X)),as.matrix(base_poly_test[,]))
as.matrix(cbind(rep(1,length(datos$X)),as.matrix(base_poly_test[,])))
length(datos$X)
as.matrix(cbind(rep(1,length(datos$Xtest)),as.matrix(base_poly_test[,]))) %*% coef(modelo_ridge)
as.matrix(cbind(rep(1,length(datos$Xtest)),as.matrix(base_poly_test[,])))
coef(modelo_ridge)
as.matrix(cbind(rep(1,length(datos$Xtest)),as.matrix(base_poly_test[,]))) %*% coef(modelo_ridge)
prediccion_ridge = as.matrix(cbind(rep(1,length(datos$Xtest)),as.matrix(base_poly_test[,]))) %*% coef(modelo_ridge)
ECM_ridge = mean((prediccion_ridge-datos$ytest)^2)
ECM_ridge
ECM_mod1 = mean((prediccion_mod1-datos$ytest)^2)
prediccion_mod1 = predict(ml1, data_testeo)
ECM_mod1 = mean((prediccion_mod1-datos$ytest)^2)
ECM_mod1
prediccion_mod2 = predict(ml2, base_poly_2)
mean((prediccion_mod2-datos$ytest)^2)
modelo_ridge <- lm.ridge( y~ ., data=base_poly, lambda = 10/28)
base_poly_test = poly(datos$Xtest, degree = 8, raw = TRUE, simple = TRUE)
ml2 = lm(y~., data = base_poly)
prediccion_mod2 = predict(ml2, base_poly_2)
mean((prediccion_mod2-datos$ytest)^2)
modelo_ridge <- lm.ridge( y~ ., data=base_poly, lambda = 10/28)
prediccion_ridge = as.matrix(cbind(rep(1,length(datos$Xtest)),as.matrix(base_poly_test[,]))) %*% coef(modelo_ridge)
ECM_ridge = mean((prediccion_ridge-datos$ytest)^2)
ECM_ridge
modelo_ridge <- lm.ridge( y~ ., data=base_poly, lambda = 100/28)
prediccion_ridge = as.matrix(cbind(rep(1,length(datos$Xtest)),as.matrix(base_poly_test[,]))) %*% coef(modelo_ridge)
ECM_ridge = mean((prediccion_ridge-datos$ytest)^2)
ECM_ridge
# Lambda = 10
modelo_ridge <- lm.ridge( y~ ., data=base_poly, lambda = 10/28)
grilla = seq(-50,50,length=1000)
plot(datos$X, datos$y)
lines(grilla, coef(modelo_ridge)[[1]] + coef(modelo_ridge)[[2]]*grilla + coef(modelo_ridge)[[3]]*grilla^2 +
coef(modelo_ridge)[[4]]*grilla^3 + coef(modelo_ridge)[[5]]*grilla^4 +
coef(modelo_ridge)[[6]]*grilla^5 + coef(modelo_ridge)[[7]]*grilla^6 +
coef(modelo_ridge)[[8]]*grilla^7 + coef(modelo_ridge)[[9]]*grilla^8, col = "green")
# Lambda = 100
modelo_ridge2 <- lm.ridge( y~ ., data=base_poly, lambda = 100/28)
grilla = seq(-50,50,length=1000)
plot(datos$X, datos$y)
lines(grilla, coef(modelo_ridge2)[[1]] + coef(modelo_ridge2)[[2]]*grilla + coef(modelo_ridge2)[[3]]*grilla^2 +
coef(modelo_ridge2)[[4]]*grilla^3 + coef(modelo_ridge2)[[5]]*grilla^4 +
coef(modelo_ridge2)[[6]]*grilla^5 + coef(modelo_ridge2)[[7]]*grilla^6 +
coef(modelo_ridge2)[[8]]*grilla^7 + coef(modelo_ridge2)[[9]]*grilla^8, col = "green")
modelo_ridge <- lm.ridge( y~ ., data=base_poly, lambda = 10/28)
prediccion_ridge = as.matrix(cbind(rep(1,length(datos$Xtest)),as.matrix(base_poly_test[,]))) %*% coef(modelo_ridge)
ECM_ridge = mean((prediccion_ridge-datos$ytest)^2)
ECM_ridge
modelo_ridge <- lm.ridge( y~ ., data=base_poly, lambda = 10)
prediccion_ridge = as.matrix(cbind(rep(1,length(datos$Xtest)),as.matrix(base_poly_test[,]))) %*% coef(modelo_ridge)
ECM_ridge = mean((prediccion_ridge-datos$ytest)^2)
ECM_ridge
library(readr)
base <- read_csv("FINAL_USO.csv")
View(base)
library(readr)
set.seed(10)
base <- read_csv("FINAL_USO.csv")
summary(base)
head(base)
dim(base)
datoss = dim(base)[1]
cant_datos = dim(base)[1]
cant_datos*0.2
colnames(base)
indice = seq(1,1718)
cant_datos*0.6
indice_entrenamiento = sample(indice, 1031,replace = FALSE)
343+343+1031
indice_entrenamiento
indice = indice[-indice_entrenamiento]
indice
colnames(base)
which(indice_entrenamiento)
indice2 = seq(1,length(indice))
indice2
indice_val = sample(indice2, 343, replace = FALSE)
indice = seq(1,1718)
indice_entrenamiento = sample(indice, 1032,replace = FALSE)
indice = indice[-indice_entrenamiento]
indice2 = seq(1,length(indice))
indice_val = sample(indice2, 343, replace = FALSE)
indice_val = indice[indice_val]
indice_val
indice = seq(1,1718)
indice_entrenamiento = sample(indice, 1032,replace = FALSE)
indice = indice[-indice_entrenamiento]
indice2 = seq(1,length(indice))
indice_val = sample(indice2, 343, replace = FALSE)
indice_val
indice2
indice_val = sample(indice2, 343, replace = FALSE)
indice_val
indice_val = sample(indice2, 343, replace = FALSE)
indice_val
set.seed(10)
indice = seq(1,1718)
indice_entrenamiento = sample(indice, 1032,replace = FALSE)
indice = indice[-indice_entrenamiento]
indice2 = seq(1,length(indice))
indice2
indice2 = seq(1,length(indice))
indice_val = sample(indice2, 343, replace = FALSE)
indice_val
indice2 = seq(1,length(indice))
indice_val = sample(indice2, 343, replace = FALSE)
indice_val
indice2
indice
indice_val
indice_val = indice[indice_val]
indice_val
indice_test = indice[-indice_val]
indice_test
sort(c(indice_entrenamiento, indice_test, indice_val))
indice = seq(1,1718)
indice_entrenamiento = sample(indice, 1032,replace = FALSE)
indice_entrenamiento
-indice_entrenamiento
indice = indice[-indice_entrenamiento]
indice
length(indice)
1718 - 1032
indice2 = seq(1,length(indice))
indice2
indice_val = sample(indice2, 343, replace = FALSE)
indice_val
indice[indice_val]
indice_val = indice[indice_val]
indice_val
indice = seq(1,1718)
indice_entrenamiento = sample(indice, 1032,replace = FALSE)
indice = indice[-indice_entrenamiento]
indice
indice2 = seq(1,length(indice))
indice2 = sample(indice2, 343, replace = FALSE)
indice2
indice_val = indice[indice2]
indice_val
indice_test = indice[-indice2]
indice_test
sort(c(indice_entrenamiento, indice_test, indice_val))
